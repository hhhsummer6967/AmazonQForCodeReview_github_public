name: Amazon Q Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      review_type:
        description: 'Review type'
        required: true
        default: 'full'
        type: choice
        options:
          - 'full'
          - 'changes'

env:
  DOCKER_IMAGE: ghcr.io/hhhsummer6967/amazon-q-code-review:latest  # 替换为您的GitHub Container Registry镜像

jobs:
  code-review:
    name: Amazon Q Code Review
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/hhhsummer6967/amazon-q-code-review:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: read
      pull-requests: write
      packages: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史以便比较变更



      - name: Set up environment variables
        id: env
        run: |
          echo "GITHUB_REPOSITORY_ID=${{ github.repository_id }}" >> $GITHUB_ENV
          echo "GITHUB_PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          echo "GITHUB_COMMIT_SHA=${{ github.event.pull_request.head.sha || github.sha }}" >> $GITHUB_ENV
          echo "GITHUB_BASE_SHA=${{ github.event.pull_request.base.sha || github.event.before }}" >> $GITHUB_ENV
          echo "GITHUB_WORKFLOW_ID=${{ github.run_id }}" >> $GITHUB_ENV
          echo "REVIEW_TYPE=${{ github.event_name == 'pull_request' && 'changes' || github.event.inputs.review_type }}" >> $GITHUB_ENV

      - name: Detect changed files
        id: changed-files
        run: |
          # 添加安全目录配置，解决dubious ownership问题
          git config --global --add safe.directory "$(pwd)"
          if [ "${{ env.REVIEW_TYPE }}" = "changes" ]; then
            if [ -n "${{ env.GITHUB_PR_NUMBER }}" ]; then
              echo "Base branch: ${{ github.event.pull_request.base.ref }}"
              echo "Checking git remotes and branches..."
         
              # 确保远程分支存在
              git fetch origin ${{ github.event.pull_request.base.ref }}
              
              echo "Comparing changes against base branch"
              git diff --name-only origin/${{ github.event.pull_request.base.ref }} HEAD | grep -vE '\.(txt|img|png|jpg|md)$' > changes.txt
            else
              git diff --name-only HEAD~1 HEAD | grep -vE '\.(txt|img|png|jpg|md)$' > changes.txt
            fi
            echo "Found $(wc -l < changes.txt) changed files"
            echo "Changed files:"
            cat changes.txt
          else
            echo "Performing full repository review"
            echo "Full repository review" > changes.txt
          fi

      - name: Run Amazon Q Code Review
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REPOSITORY_ID: ${{ env.GITHUB_REPOSITORY_ID }}
          GITHUB_PR_NUMBER: ${{ env.GITHUB_PR_NUMBER }}
          GITHUB_COMMIT_SHA: ${{ env.GITHUB_COMMIT_SHA }}
          GITHUB_WORKFLOW_ID: ${{ env.GITHUB_WORKFLOW_ID }}
          REGISTRATION_TOKEN: ${{ secrets.REGISTRATION_TOKEN }}
          AMAZON_Q_S3_URI: ${{ secrets.AMAZON_Q_S3_URI }}
          REVIEW_TYPE: ${{ env.REVIEW_TYPE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          echo "Starting Amazon Q Code Review..."
          echo "Review type: $REVIEW_TYPE"
          echo "Working directory: $(pwd)"
          echo "Files in workspace:"
          ls -la | head -10
          
          echo "Amazon Q version: $(q --version)"
          if [ -n "${{ secrets.AMAZON_Q_S3_URI }}" ]; then
            aws s3 sync ${{ secrets.AMAZON_Q_S3_URI }} ~/.local/share/amazon-q
            echo "Synced Amazon Q configuration from S3"
          else
            echo "No Amazon Q S3 URI provided, skipping sync"
            exit 1
          fi
          if [ "$REVIEW_TYPE" = "changes" ]; then
                echo "Running review on changed files..."
                q chat -a -- "
                你是一位专业的代码审核助手，负责根据预定义的代码审核规则对提交的代码变更进行全面审核。

                ## 审核规则文件
                以下文件包含你需要遵循的详细代码审核规则：

                1. improve_rules/improved_code_review_standards_part1.md - 包含一般原则、代码审查流程和检查清单的第一部分（代码风格和代码质量）
                2. improve_rules/improved_code_review_standards_part2.md - 包含功能实现、安全性和性能部分
                3. improve_rules/improved_code_review_standards_part3.md - 包含测试、日志记录、可维护性和特定场景，如并发、事务、幂等性和远程调用
                4. improve_rules/improved_code_review_standards_part4.md - 包含语言特定的检查点、中间件使用指南、通信指南、工具推荐和持续改进

                ## 审核流程
                1. 首先，请仔细阅读并理解上述所有规则文件中的内容
                2. 然后，审核 changes.txt 内列出的本次变更的代码文件
                3. 根据 improve_rules/llm_code_review_feedback_format.md 中定义的格式，生成审核反馈
                4. 将审核结果以中文输出到 amazon_q_review.md 文件中

                ## 输出要求
                • 审核反馈必须使用中文
                • 严格遵循 llm_code_review_feedback_format.md 中的格式要求
                • 提供具体、有建设性的反馈，包括问题描述和改进建议
                • 对代码的优点也要给予肯定
                • **只报告紧急程度为【阻塞】、【重要】和【一般】的问题，不要提供紧急程度为\"建议\"的问题**
                • 根据问题的严重程度进行分类：
                  • 【阻塞】：必须修复才能合并的严重问题
                  • 【重要】：应当修复但不阻止合并的问题
                  • 【一般】：可以考虑修复的问题

                ## 完成后操作
                1. 检查 amazon_q_review.md 文件，确保内容完整且符合格式要求
                2. 完成后简单回复\"完成\"，无需对任务做总结

                请注意：整个过程中不要修改任何原始文件，只生成审核结果文件。
                "
              else
                echo "Running full repository review..."
                q chat -a -- "
                你是一位专业的代码审核专家，需要对一个大型代码仓库进行全面审核。请严格按照以下指导进行工作：

                ## 审核规则来源
                请仔细阅读并完全理解以下文件中的代码审核规则：
                1. improve_rules/improved_code_review_standards_part1.md - 一般原则、代码审查流程和代码风格/质量检查清单
                2. improve_rules/improved_code_review_standards_part2.md - 功能实现、安全性和性能最佳实践
                3. improve_rules/improved_code_review_standards_part3.md - 测试、日志记录、可维护性和特定场景(并发、事务、幂等性、远程调用)
                4. improve_rules/improved_code_review_standards_part4.md - 语言特定检查点、中间件使用、通信指南和工具推荐

                ## 审核方法
                1. 首先，扫描整个代码仓库结构，了解项目架构和组件关系
                2. 按照 improve_rules/AmazonQ_largeCode_review_rule.md 中的原则进行系统性审核
                3. 重点关注：
                  - 代码质量和一致性问题
                  - 潜在的安全漏洞
                  - 性能优化机会
                  - 可维护性和可扩展性
                  - 特定场景的最佳实践实现

                ## 输出要求
                1. 将审核结果以**中文**输出到 amazon_q_review.md 文件
                2. 严格遵循 improve_rules/llm_code_review_feedback_format.md 中定义的格式
                3. 审核报告应包含：
                  - 总体评估和主要发现
                  - 按严重程度分类的问题清单,报告只需展示紧急程度为【阻塞/重要/一般】的问题，不要提供紧急程度为**建议**的问题
                  - 每个问题的具体位置、详细描述和改进建议
                  - 代码优化示例（如适用）
                  - 总结性建议

                ## 重要注意事项
                1. **不要修改任何原始代码**，只提供审核意见
                2. 确保覆盖所有关键组件和核心功能
                3. 审核完成后，检查 amazon_q_review.md 确保内容完整且格式正确
                4. 不需要对任务本身做总结，专注于代码审核结果
                5. 如发现特别严重的问题，请在报告开头特别标注

                请开始代码审核工作，并确保审核质量符合专业标准，运行完成后不要输出工作总结。
                "
              fi
              
          
          echo "=== Checking output files ==="
          if [ -f "amazon_q_review.md" ]; then
            echo "Review file created successfully"
            echo "File size: $(wc -c < amazon_q_review.md) bytes"
            echo "First 500 chars:"
            head -c 500 amazon_q_review.md
            cp amazon_q_review.md amazon_q_review_$GITHUB_WORKFLOW_ID.md
          else
            echo "ERROR: amazon_q_review.md not created"
            exit 1
          fi
          
          if [ -f "github_comment.py" ]; then
            echo "Running github_comment.py..."
            python3 github_comment.py
          else
            echo "WARNING: github_comment.py not found"
          fi

      - name: Upload review artifact
        uses: actions/upload-artifact@v4
        with:
          name: amazon-q-review
          path: amazon_q_review_${{ env.GITHUB_WORKFLOW_ID }}.md
          retention-days: 30
